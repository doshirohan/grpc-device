//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Real implementation of LibraryInterface for NI-Digital Pattern Driver
//---------------------------------------------------------------------
#ifndef NIDIGITAL_GRPC_LIBRARY_H
#define NIDIGITAL_GRPC_LIBRARY_H

#include "nidigital_library_interface.h"

#include <server/shared_library.h>

namespace nidigital_grpc {

class NiDigitalLibrary : public nidigital_grpc::NiDigitalLibraryInterface {
 public:
  NiDigitalLibrary();
  virtual ~NiDigitalLibrary();

  ::grpc::Status check_function_exists(std::string functionName);
  ViStatus Abort(ViSession vi);
  ViStatus AbortKeepAlive(ViSession vi);
  ViStatus ApplyLevelsAndTiming(ViSession vi, ViConstString siteList, ViConstString levelsSheet, ViConstString timingSheet, ViConstString initialStateHighPins, ViConstString initialStateLowPins, ViConstString initialStateTristatePins);
  ViStatus ApplyTDROffsets(ViSession vi, ViConstString channelList, ViInt32 numOffsets, ViReal64 offsets[]);
  ViStatus BurstPattern(ViSession vi, ViConstString siteList, ViConstString startLabel, ViBoolean selectDigitalFunction, ViBoolean waitUntilDone, ViReal64 timeout);
  ViStatus ClockGenerator_Abort(ViSession vi, ViConstString channelList);
  ViStatus ClockGenerator_GenerateClock(ViSession vi, ViConstString channelList, ViReal64 frequency, ViBoolean selectDigitalFunction);
  ViStatus Commit(ViSession vi);
  ViStatus ConfigureActiveLoadLevels(ViSession vi, ViConstString channelList, ViReal64 iol, ViReal64 ioh, ViReal64 vcom);
  ViStatus ConfigurePatternBurstSites(ViSession vi, ViConstString siteList);
  ViStatus ConfigureTimeSetCompareEdgesStrobe(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViReal64 strobeEdge);
  ViStatus ConfigureTimeSetCompareEdgesStrobe2x(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViReal64 strobeEdge, ViReal64 strobe2Edge);
  ViStatus ConfigureTimeSetDriveEdges(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 format, ViReal64 driveOnEdge, ViReal64 driveDataEdge, ViReal64 driveReturnEdge, ViReal64 driveOffEdge);
  ViStatus ConfigureTimeSetDriveEdges2x(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 format, ViReal64 driveOnEdge, ViReal64 driveDataEdge, ViReal64 driveReturnEdge, ViReal64 driveOffEdge, ViReal64 driveData2Edge, ViReal64 driveReturn2Edge);
  ViStatus ConfigureTimeSetDriveFormat(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 driveFormat);
  ViStatus ConfigureTimeSetEdge(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 edge, ViReal64 time);
  ViStatus ConfigureTimeSetEdgeMultiplier(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 edgeMultiplier);
  ViStatus ConfigureTimeSetPeriod(ViSession vi, ViConstString timeSetName, ViReal64 period);
  ViStatus ConfigureVoltageLevels(ViSession vi, ViConstString channelList, ViReal64 vil, ViReal64 vih, ViReal64 vol, ViReal64 voh, ViReal64 vterm);
  ViStatus CreateCaptureWaveformFromFileDigicapture(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath);
  ViStatus CreateCaptureWaveformParallel(ViSession vi, ViConstString pinList, ViConstString waveformName);
  ViStatus CreateCaptureWaveformSerial(ViSession vi, ViConstString pinList, ViConstString waveformName, ViUInt32 sampleWidth, ViInt32 bitOrder);
  ViStatus CreateSourceWaveformFromFileTDMS(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath, ViBoolean writeWaveformData);
  ViStatus CreateSourceWaveformParallel(ViSession vi, ViConstString pinList, ViConstString waveformName, ViInt32 dataMapping);
  ViStatus CreateSourceWaveformSerial(ViSession vi, ViConstString pinList, ViConstString waveformName, ViInt32 dataMapping, ViUInt32 sampleWidth, ViInt32 bitOrder);
  ViStatus CreateTimeSet(ViSession vi, ViConstString name);
  ViStatus DeleteAllTimeSets(ViSession vi);
  ViStatus DisableSites(ViSession vi, ViConstString siteList);
  ViStatus EnableSites(ViSession vi, ViConstString siteList);
  ViStatus FetchCaptureWaveformU32(ViSession vi, ViConstString siteList, ViConstString waveformName, ViInt32 samplesToRead, ViReal64 timeout, ViInt32 dataBufferSize, ViUInt32 data[], ViInt32* actualNumWaveforms, ViInt32* actualSamplesPerWaveform);
  ViStatus FetchHistoryRAMCycleInformation(ViSession vi, ViConstString site, ViInt64 sampleIndex, ViInt32* patternIndex, ViInt32* timeSetIndex, ViInt64* vectorNumber, ViInt64* cycleNumber, ViInt32* numDutCycles);
  ViStatus FetchHistoryRAMScanCycleNumber(ViSession vi, ViConstString site, ViInt64 sampleIndex, ViInt64* scanCycleNumber);
  ViStatus FrequencyCounter_MeasureFrequency(ViSession vi, ViConstString channelList, ViInt32 frequenciesBufferSize, ViReal64 frequencies[], ViInt32* actualNumFrequencies);
  ViStatus GetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean* value);
  ViStatus GetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32* value);
  ViStatus GetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64* value);
  ViStatus GetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64* value);
  ViStatus GetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufferSize, ViChar value[]);
  ViStatus GetChannelNameFromString(ViSession vi, ViConstString indices, ViInt32 nameBufferSize, ViChar names[]);
  ViStatus GetError(ViSession vi, ViStatus* errorCode, ViInt32 errorDescriptionBufferSize, ViChar errorDescription[]);
  ViStatus GetFailCount(ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViInt64 failureCount[], ViInt32* actualNumRead);
  ViStatus GetHistoryRAMSampleCount(ViSession vi, ViConstString site, ViInt64* sampleCount);
  ViStatus GetPatternName(ViSession vi, ViInt32 patternIndex, ViInt32 nameBufferSize, ViChar name[]);
  ViStatus GetPatternPinList(ViSession vi, ViConstString startLabel, ViInt32 pinListBufferSize, ViChar pinList[]);
  ViStatus GetPinName(ViSession vi, ViInt32 pinIndex, ViInt32 nameBufferSize, ViChar name[]);
  ViStatus GetPinResultsPinInformation(ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViInt32 pinIndexes[], ViInt32 siteNumbers[], ViInt32 channelIndexes[], ViInt32* actualNumValues);
  ViStatus GetSitePassFail(ViSession vi, ViConstString siteList, ViInt32 passFailBufferSize, ViBoolean passFail[], ViInt32* actualNumSites);
  ViStatus GetSiteResultsSiteNumbers(ViSession vi, ViConstString siteList, ViInt32 siteResultType, ViInt32 siteNumbersBufferSize, ViInt32 siteNumbers[], ViInt32* actualNumSiteNumbers);
  ViStatus GetTimeSetDriveFormat(ViSession vi, ViConstString pin, ViConstString timeSetName, ViInt32* format);
  ViStatus GetTimeSetEdge(ViSession vi, ViConstString pin, ViConstString timeSetName, ViInt32 edge, ViReal64* time);
  ViStatus GetTimeSetEdgeMultiplier(ViSession vi, ViConstString pin, ViConstString timeSetName, ViInt32* edgeMultiplier);
  ViStatus GetTimeSetName(ViSession vi, ViInt32 timeSetIndex, ViInt32 nameBufferSize, ViChar name[]);
  ViStatus GetTimeSetPeriod(ViSession vi, ViConstString timeSetName, ViReal64* period);
  ViStatus InitWithOptions(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* newVi);
  ViStatus Initiate(ViSession vi);
  ViStatus IsDone(ViSession vi, ViBoolean* done);
  ViStatus IsSiteEnabled(ViSession vi, ViConstString site, ViBoolean* enable);
  ViStatus LoadLevels(ViSession vi, ViConstString filePath);
  ViStatus LoadPattern(ViSession vi, ViConstString filePath);
  ViStatus LoadPinMap(ViSession vi, ViConstString filePath);
  ViStatus LoadSpecifications(ViSession vi, ViConstString filePath);
  ViStatus LoadTiming(ViSession vi, ViConstString filePath);
  ViStatus LockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus PPMU_Measure(ViSession vi, ViConstString channelList, ViInt32 measurementType, ViInt32 bufferSize, ViReal64 measurements[], ViInt32* actualNumRead);
  ViStatus PPMU_Source(ViSession vi, ViConstString channelList);
  ViStatus ReadSequencerFlag(ViSession vi, ViConstString flag, ViBoolean* value);
  ViStatus ReadSequencerRegister(ViSession vi, ViConstString reg, ViInt32* value);
  ViStatus ResetDevice(ViSession vi);
  ViStatus SelfCalibrate(ViSession vi);
  ViStatus SendSoftwareEdgeTrigger(ViSession vi, ViInt32 trigger, ViConstString triggerIdentifier);
  ViStatus SetAttributeViBoolean(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);
  ViStatus SetAttributeViInt32(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
  ViStatus SetAttributeViInt64(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64 value);
  ViStatus SetAttributeViReal64(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
  ViStatus SetAttributeViString(ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
  ViStatus TDR(ViSession vi, ViConstString channelList, ViBoolean applyOffsets, ViInt32 offsetsBufferSize, ViReal64 offsets[], ViInt32* actualNumOffsets);
  ViStatus UnloadAllPatterns(ViSession vi, ViBoolean unloadKeepAlivePattern);
  ViStatus UnloadSpecifications(ViSession vi, ViConstString filePath);
  ViStatus UnlockSession(ViSession vi, ViBoolean* callerHasLock);
  ViStatus WaitUntilDone(ViSession vi, ViReal64 timeout);
  ViStatus WriteSequencerFlag(ViSession vi, ViConstString flag, ViBoolean value);
  ViStatus WriteSequencerRegister(ViSession vi, ViConstString reg, ViInt32 value);
  ViStatus WriteSourceWaveformBroadcastU32(ViSession vi, ViConstString waveformName, ViInt32 waveformSize, ViUInt32 waveformData[]);
  ViStatus WriteSourceWaveformDataFromFileTDMS(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath);
  ViStatus WriteSourceWaveformSiteUniqueU32(ViSession vi, ViConstString siteList, ViConstString waveformName, ViInt32 numWaveforms, ViInt32 samplesPerWaveform, ViUInt32 waveformData[1]);
  ViStatus close(ViSession vi);
  ViStatus error_message(ViSession vi, ViStatus errorCode, ViChar errorMessage[256]);
  ViStatus reset(ViSession vi);
  ViStatus self_test(ViSession vi, ViInt16* testResult, ViChar testMessage[2048]);

 private:
  using AbortPtr = ViStatus (*)(ViSession vi);
  using AbortKeepAlivePtr = ViStatus (*)(ViSession vi);
  using ApplyLevelsAndTimingPtr = ViStatus (*)(ViSession vi, ViConstString siteList, ViConstString levelsSheet, ViConstString timingSheet, ViConstString initialStateHighPins, ViConstString initialStateLowPins, ViConstString initialStateTristatePins);
  using ApplyTDROffsetsPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViInt32 numOffsets, ViReal64 offsets[]);
  using BurstPatternPtr = ViStatus (*)(ViSession vi, ViConstString siteList, ViConstString startLabel, ViBoolean selectDigitalFunction, ViBoolean waitUntilDone, ViReal64 timeout);
  using ClockGenerator_AbortPtr = ViStatus (*)(ViSession vi, ViConstString channelList);
  using ClockGenerator_GenerateClockPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViReal64 frequency, ViBoolean selectDigitalFunction);
  using CommitPtr = ViStatus (*)(ViSession vi);
  using ConfigureActiveLoadLevelsPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViReal64 iol, ViReal64 ioh, ViReal64 vcom);
  using ConfigurePatternBurstSitesPtr = ViStatus (*)(ViSession vi, ViConstString siteList);
  using ConfigureTimeSetCompareEdgesStrobePtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViReal64 strobeEdge);
  using ConfigureTimeSetCompareEdgesStrobe2xPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViReal64 strobeEdge, ViReal64 strobe2Edge);
  using ConfigureTimeSetDriveEdgesPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 format, ViReal64 driveOnEdge, ViReal64 driveDataEdge, ViReal64 driveReturnEdge, ViReal64 driveOffEdge);
  using ConfigureTimeSetDriveEdges2xPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 format, ViReal64 driveOnEdge, ViReal64 driveDataEdge, ViReal64 driveReturnEdge, ViReal64 driveOffEdge, ViReal64 driveData2Edge, ViReal64 driveReturn2Edge);
  using ConfigureTimeSetDriveFormatPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 driveFormat);
  using ConfigureTimeSetEdgePtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 edge, ViReal64 time);
  using ConfigureTimeSetEdgeMultiplierPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString timeSetName, ViInt32 edgeMultiplier);
  using ConfigureTimeSetPeriodPtr = ViStatus (*)(ViSession vi, ViConstString timeSetName, ViReal64 period);
  using ConfigureVoltageLevelsPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViReal64 vil, ViReal64 vih, ViReal64 vol, ViReal64 voh, ViReal64 vterm);
  using CreateCaptureWaveformFromFileDigicapturePtr = ViStatus (*)(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath);
  using CreateCaptureWaveformParallelPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString waveformName);
  using CreateCaptureWaveformSerialPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString waveformName, ViUInt32 sampleWidth, ViInt32 bitOrder);
  using CreateSourceWaveformFromFileTDMSPtr = ViStatus (*)(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath, ViBoolean writeWaveformData);
  using CreateSourceWaveformParallelPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString waveformName, ViInt32 dataMapping);
  using CreateSourceWaveformSerialPtr = ViStatus (*)(ViSession vi, ViConstString pinList, ViConstString waveformName, ViInt32 dataMapping, ViUInt32 sampleWidth, ViInt32 bitOrder);
  using CreateTimeSetPtr = ViStatus (*)(ViSession vi, ViConstString name);
  using DeleteAllTimeSetsPtr = ViStatus (*)(ViSession vi);
  using DisableSitesPtr = ViStatus (*)(ViSession vi, ViConstString siteList);
  using EnableSitesPtr = ViStatus (*)(ViSession vi, ViConstString siteList);
  using FetchCaptureWaveformU32Ptr = ViStatus (*)(ViSession vi, ViConstString siteList, ViConstString waveformName, ViInt32 samplesToRead, ViReal64 timeout, ViInt32 dataBufferSize, ViUInt32 data[], ViInt32* actualNumWaveforms, ViInt32* actualSamplesPerWaveform);
  using FetchHistoryRAMCycleInformationPtr = ViStatus (*)(ViSession vi, ViConstString site, ViInt64 sampleIndex, ViInt32* patternIndex, ViInt32* timeSetIndex, ViInt64* vectorNumber, ViInt64* cycleNumber, ViInt32* numDutCycles);
  using FetchHistoryRAMScanCycleNumberPtr = ViStatus (*)(ViSession vi, ViConstString site, ViInt64 sampleIndex, ViInt64* scanCycleNumber);
  using FrequencyCounter_MeasureFrequencyPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViInt32 frequenciesBufferSize, ViReal64 frequencies[], ViInt32* actualNumFrequencies);
  using GetAttributeViBooleanPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean* value);
  using GetAttributeViInt32Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32* value);
  using GetAttributeViInt64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64* value);
  using GetAttributeViReal64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64* value);
  using GetAttributeViStringPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 bufferSize, ViChar value[]);
  using GetChannelNameFromStringPtr = ViStatus (*)(ViSession vi, ViConstString indices, ViInt32 nameBufferSize, ViChar names[]);
  using GetErrorPtr = ViStatus (*)(ViSession vi, ViStatus* errorCode, ViInt32 errorDescriptionBufferSize, ViChar errorDescription[]);
  using GetFailCountPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViInt64 failureCount[], ViInt32* actualNumRead);
  using GetHistoryRAMSampleCountPtr = ViStatus (*)(ViSession vi, ViConstString site, ViInt64* sampleCount);
  using GetPatternNamePtr = ViStatus (*)(ViSession vi, ViInt32 patternIndex, ViInt32 nameBufferSize, ViChar name[]);
  using GetPatternPinListPtr = ViStatus (*)(ViSession vi, ViConstString startLabel, ViInt32 pinListBufferSize, ViChar pinList[]);
  using GetPinNamePtr = ViStatus (*)(ViSession vi, ViInt32 pinIndex, ViInt32 nameBufferSize, ViChar name[]);
  using GetPinResultsPinInformationPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViInt32 bufferSize, ViInt32 pinIndexes[], ViInt32 siteNumbers[], ViInt32 channelIndexes[], ViInt32* actualNumValues);
  using GetSitePassFailPtr = ViStatus (*)(ViSession vi, ViConstString siteList, ViInt32 passFailBufferSize, ViBoolean passFail[], ViInt32* actualNumSites);
  using GetSiteResultsSiteNumbersPtr = ViStatus (*)(ViSession vi, ViConstString siteList, ViInt32 siteResultType, ViInt32 siteNumbersBufferSize, ViInt32 siteNumbers[], ViInt32* actualNumSiteNumbers);
  using GetTimeSetDriveFormatPtr = ViStatus (*)(ViSession vi, ViConstString pin, ViConstString timeSetName, ViInt32* format);
  using GetTimeSetEdgePtr = ViStatus (*)(ViSession vi, ViConstString pin, ViConstString timeSetName, ViInt32 edge, ViReal64* time);
  using GetTimeSetEdgeMultiplierPtr = ViStatus (*)(ViSession vi, ViConstString pin, ViConstString timeSetName, ViInt32* edgeMultiplier);
  using GetTimeSetNamePtr = ViStatus (*)(ViSession vi, ViInt32 timeSetIndex, ViInt32 nameBufferSize, ViChar name[]);
  using GetTimeSetPeriodPtr = ViStatus (*)(ViSession vi, ViConstString timeSetName, ViReal64* period);
  using InitWithOptionsPtr = ViStatus (*)(ViRsrc resourceName, ViBoolean idQuery, ViBoolean resetDevice, ViConstString optionString, ViSession* newVi);
  using InitiatePtr = ViStatus (*)(ViSession vi);
  using IsDonePtr = ViStatus (*)(ViSession vi, ViBoolean* done);
  using IsSiteEnabledPtr = ViStatus (*)(ViSession vi, ViConstString site, ViBoolean* enable);
  using LoadLevelsPtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using LoadPatternPtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using LoadPinMapPtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using LoadSpecificationsPtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using LoadTimingPtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using LockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using PPMU_MeasurePtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViInt32 measurementType, ViInt32 bufferSize, ViReal64 measurements[], ViInt32* actualNumRead);
  using PPMU_SourcePtr = ViStatus (*)(ViSession vi, ViConstString channelList);
  using ReadSequencerFlagPtr = ViStatus (*)(ViSession vi, ViConstString flag, ViBoolean* value);
  using ReadSequencerRegisterPtr = ViStatus (*)(ViSession vi, ViConstString reg, ViInt32* value);
  using ResetDevicePtr = ViStatus (*)(ViSession vi);
  using SelfCalibratePtr = ViStatus (*)(ViSession vi);
  using SendSoftwareEdgeTriggerPtr = ViStatus (*)(ViSession vi, ViInt32 trigger, ViConstString triggerIdentifier);
  using SetAttributeViBooleanPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViBoolean value);
  using SetAttributeViInt32Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt32 value);
  using SetAttributeViInt64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViInt64 value);
  using SetAttributeViReal64Ptr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViReal64 value);
  using SetAttributeViStringPtr = ViStatus (*)(ViSession vi, ViConstString channelName, ViAttr attribute, ViConstString value);
  using TDRPtr = ViStatus (*)(ViSession vi, ViConstString channelList, ViBoolean applyOffsets, ViInt32 offsetsBufferSize, ViReal64 offsets[], ViInt32* actualNumOffsets);
  using UnloadAllPatternsPtr = ViStatus (*)(ViSession vi, ViBoolean unloadKeepAlivePattern);
  using UnloadSpecificationsPtr = ViStatus (*)(ViSession vi, ViConstString filePath);
  using UnlockSessionPtr = ViStatus (*)(ViSession vi, ViBoolean* callerHasLock);
  using WaitUntilDonePtr = ViStatus (*)(ViSession vi, ViReal64 timeout);
  using WriteSequencerFlagPtr = ViStatus (*)(ViSession vi, ViConstString flag, ViBoolean value);
  using WriteSequencerRegisterPtr = ViStatus (*)(ViSession vi, ViConstString reg, ViInt32 value);
  using WriteSourceWaveformBroadcastU32Ptr = ViStatus (*)(ViSession vi, ViConstString waveformName, ViInt32 waveformSize, ViUInt32 waveformData[]);
  using WriteSourceWaveformDataFromFileTDMSPtr = ViStatus (*)(ViSession vi, ViConstString waveformName, ViConstString waveformFilePath);
  using WriteSourceWaveformSiteUniqueU32Ptr = ViStatus (*)(ViSession vi, ViConstString siteList, ViConstString waveformName, ViInt32 numWaveforms, ViInt32 samplesPerWaveform, ViUInt32 waveformData[1]);
  using closePtr = ViStatus (*)(ViSession vi);
  using error_messagePtr = ViStatus (*)(ViSession vi, ViStatus errorCode, ViChar errorMessage[256]);
  using resetPtr = ViStatus (*)(ViSession vi);
  using self_testPtr = ViStatus (*)(ViSession vi, ViInt16* testResult, ViChar testMessage[2048]);

  typedef struct FunctionPointers {
    AbortPtr Abort;
    AbortKeepAlivePtr AbortKeepAlive;
    ApplyLevelsAndTimingPtr ApplyLevelsAndTiming;
    ApplyTDROffsetsPtr ApplyTDROffsets;
    BurstPatternPtr BurstPattern;
    ClockGenerator_AbortPtr ClockGenerator_Abort;
    ClockGenerator_GenerateClockPtr ClockGenerator_GenerateClock;
    CommitPtr Commit;
    ConfigureActiveLoadLevelsPtr ConfigureActiveLoadLevels;
    ConfigurePatternBurstSitesPtr ConfigurePatternBurstSites;
    ConfigureTimeSetCompareEdgesStrobePtr ConfigureTimeSetCompareEdgesStrobe;
    ConfigureTimeSetCompareEdgesStrobe2xPtr ConfigureTimeSetCompareEdgesStrobe2x;
    ConfigureTimeSetDriveEdgesPtr ConfigureTimeSetDriveEdges;
    ConfigureTimeSetDriveEdges2xPtr ConfigureTimeSetDriveEdges2x;
    ConfigureTimeSetDriveFormatPtr ConfigureTimeSetDriveFormat;
    ConfigureTimeSetEdgePtr ConfigureTimeSetEdge;
    ConfigureTimeSetEdgeMultiplierPtr ConfigureTimeSetEdgeMultiplier;
    ConfigureTimeSetPeriodPtr ConfigureTimeSetPeriod;
    ConfigureVoltageLevelsPtr ConfigureVoltageLevels;
    CreateCaptureWaveformFromFileDigicapturePtr CreateCaptureWaveformFromFileDigicapture;
    CreateCaptureWaveformParallelPtr CreateCaptureWaveformParallel;
    CreateCaptureWaveformSerialPtr CreateCaptureWaveformSerial;
    CreateSourceWaveformFromFileTDMSPtr CreateSourceWaveformFromFileTDMS;
    CreateSourceWaveformParallelPtr CreateSourceWaveformParallel;
    CreateSourceWaveformSerialPtr CreateSourceWaveformSerial;
    CreateTimeSetPtr CreateTimeSet;
    DeleteAllTimeSetsPtr DeleteAllTimeSets;
    DisableSitesPtr DisableSites;
    EnableSitesPtr EnableSites;
    FetchCaptureWaveformU32Ptr FetchCaptureWaveformU32;
    FetchHistoryRAMCycleInformationPtr FetchHistoryRAMCycleInformation;
    FetchHistoryRAMScanCycleNumberPtr FetchHistoryRAMScanCycleNumber;
    FrequencyCounter_MeasureFrequencyPtr FrequencyCounter_MeasureFrequency;
    GetAttributeViBooleanPtr GetAttributeViBoolean;
    GetAttributeViInt32Ptr GetAttributeViInt32;
    GetAttributeViInt64Ptr GetAttributeViInt64;
    GetAttributeViReal64Ptr GetAttributeViReal64;
    GetAttributeViStringPtr GetAttributeViString;
    GetChannelNameFromStringPtr GetChannelNameFromString;
    GetErrorPtr GetError;
    GetFailCountPtr GetFailCount;
    GetHistoryRAMSampleCountPtr GetHistoryRAMSampleCount;
    GetPatternNamePtr GetPatternName;
    GetPatternPinListPtr GetPatternPinList;
    GetPinNamePtr GetPinName;
    GetPinResultsPinInformationPtr GetPinResultsPinInformation;
    GetSitePassFailPtr GetSitePassFail;
    GetSiteResultsSiteNumbersPtr GetSiteResultsSiteNumbers;
    GetTimeSetDriveFormatPtr GetTimeSetDriveFormat;
    GetTimeSetEdgePtr GetTimeSetEdge;
    GetTimeSetEdgeMultiplierPtr GetTimeSetEdgeMultiplier;
    GetTimeSetNamePtr GetTimeSetName;
    GetTimeSetPeriodPtr GetTimeSetPeriod;
    InitWithOptionsPtr InitWithOptions;
    InitiatePtr Initiate;
    IsDonePtr IsDone;
    IsSiteEnabledPtr IsSiteEnabled;
    LoadLevelsPtr LoadLevels;
    LoadPatternPtr LoadPattern;
    LoadPinMapPtr LoadPinMap;
    LoadSpecificationsPtr LoadSpecifications;
    LoadTimingPtr LoadTiming;
    LockSessionPtr LockSession;
    PPMU_MeasurePtr PPMU_Measure;
    PPMU_SourcePtr PPMU_Source;
    ReadSequencerFlagPtr ReadSequencerFlag;
    ReadSequencerRegisterPtr ReadSequencerRegister;
    ResetDevicePtr ResetDevice;
    SelfCalibratePtr SelfCalibrate;
    SendSoftwareEdgeTriggerPtr SendSoftwareEdgeTrigger;
    SetAttributeViBooleanPtr SetAttributeViBoolean;
    SetAttributeViInt32Ptr SetAttributeViInt32;
    SetAttributeViInt64Ptr SetAttributeViInt64;
    SetAttributeViReal64Ptr SetAttributeViReal64;
    SetAttributeViStringPtr SetAttributeViString;
    TDRPtr TDR;
    UnloadAllPatternsPtr UnloadAllPatterns;
    UnloadSpecificationsPtr UnloadSpecifications;
    UnlockSessionPtr UnlockSession;
    WaitUntilDonePtr WaitUntilDone;
    WriteSequencerFlagPtr WriteSequencerFlag;
    WriteSequencerRegisterPtr WriteSequencerRegister;
    WriteSourceWaveformBroadcastU32Ptr WriteSourceWaveformBroadcastU32;
    WriteSourceWaveformDataFromFileTDMSPtr WriteSourceWaveformDataFromFileTDMS;
    WriteSourceWaveformSiteUniqueU32Ptr WriteSourceWaveformSiteUniqueU32;
    closePtr close;
    error_messagePtr error_message;
    resetPtr reset;
    self_testPtr self_test;
  } FunctionLoadStatus;

  nidevice_grpc::SharedLibrary shared_library_;
  FunctionPointers function_pointers_;
};

}  // namespace nidigital_grpc

#endif  // NIDIGITAL_GRPC_LIBRARY_H
